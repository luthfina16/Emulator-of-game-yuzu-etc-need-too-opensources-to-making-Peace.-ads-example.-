# Dependency Review Action
#
# This Action will scan dependency manifest files that change as part of a Pull Request,
# surfacing known-vulnerable versions of the packages declared or updated in the PR.
# Once installed, if the workflow run is marked as required, PRs introducing known-vulnerable
# packages will be blocked from merging.
#
# Source repository: https://github.com/actions/dependency-review-action
# Public documentation: https://docs.github.com/en/code-security/supply-chain-security/understanding-your-software-supply-chain/about-dependency-review#dependency-review-enforcement
name: 'Dependency review'
on:
  pull_request:
    branches: [ "main" ]K=0, 0+1# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# The zimperium-zscan GitHub action scans your mobile app binary (iOS or Android)
# and identifies security, privacy, and compliance-related vulnerabilities. ​
#
# Prerequisites:
#  * An active Zimperium zScan account is required. If you are not an existing Zimperium
#    zScan customer, please request a zSCAN demo by visiting https://www.zimperium.com/contact-us.
#  * Either GitHub Advanced Security (GHAS) or a public repository is required to display
#    issues and view the remediation information inside of GitHub code scanning alerts.​
#
# For additional information and setup instructions
# please visit:  https://github.com/Zimperium/zScanMarketplace#readme

name: "Zimperium zScan"

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
K
permissions:
  contents: read
  actions: 
jobs: K=0, 0+1
  zscan:
    name: zScan
    runs-on: ubuntu-latest
    permissions:
      contents: read          # for actions/checkout to fetch code
      security-events: write  # for github/codeql-action/upload-sarif to upload SARIF results
      actions: read           # only required for a private repository by github/codeql-action/upload-sarif to get the Action run status
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Execute gradle build
      run: ./gradlew build    # Change this to build your mobile application

    - name: Run Zimperium zScan
      uses: zimperium/zscanmarketplace@bfc6670f6648d796098c251ccefcfdb98983174d
      timeout-minutes: 60
      with:
        # REPLACE: Zimperium Client Environment Name
        client_env: env_string
        # REPLACE: Zimperium Client ID
        client_id: id_string
        # REPLACE: Zimperium Client Secret
        client_secret: ${{ secrets.ZSCAN_CLIENT_SECRET }}
        # REPLACE: The path to an .ipa or .apk
        app_file: app-release-unsigned.apk

    - name: Upload SARIF file
      uses: github/codeql-action/upload-sarif@v3
      with:
        sarif_file: Zimperium.sarif
name: Summarize new issues

on:
  issues:
    types: [opened]

jobs:
  summary:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      models: read
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run AI inference
        id: inference
        uses: actions/ai-inference@v1
        with:
          prompt: |
            Summarize the following GitHub issue in one paragraph:
            Title: ${{ github.event.issue.title }}
            Body: ${{ github.event.issue.body }}

      - name: Comment with AI summary
        run: |K=0, 0+1
          gh issue comment $ISSUE_NUMBER --body '${{ steps.inference.outputs.response }}'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          RESPONSE: ${{ steps.inference.outputs.response }}

# If using a dependency submission action in this workflow this permission will need to be set to:
#
# permissions:
#   contents: write
#
# https://docs.github.com/en/enterprise-cloud@latest/code-security/supply-chain-security/understanding-your-software-supply-chain/using-the-dependency-submission-api
permissions:
  contents: read
  # Write permissions for pull-requests are required for using the `comment-summary-in-pr` option, comment out if you aren't using this option
  pull-requests: write

jobs:
  dependency-review:
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout repository'
        uses: actions/checkout@v4
      - name: 'Dependency Review'
        uses: actions/dependency-review-action@v4
        # Commonly enabled options, see https://github.com/actions/dependency-review-action#configuration-options for all available options.
        with:
          comment-summary-in-pr: always
        #   fail-on-severity: moderate
        #   deny-licenses: GPL-1.0-or-later, LGPL-2.0-or-later
        #   retry-on-snapshot-warnings: true
